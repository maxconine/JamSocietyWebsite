rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Equipment rules
    match /equipment/{equipmentId} {
      allow read: if true;  // Anyone can read equipment
      allow write: if isAdmin();  // Only admins can modify equipment
    }
    
    // Reservation rules
    match /reservations/{reservationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || 
        (isAuthenticated() && request.auth.uid == resource.data.userId);
    }
    
    // User rules
    match /users/{userId} {
      allow read: if true;  // Allow reading user documents for login
      allow create: if true;  // Allow new user registration
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }
  }
} 